format(sum_coef4$coefficients[19], digits = 2),
format(sum_coef4$coefficients[20], digits = 2),
format(sum_coef4$coefficients[21], digits = 2),
format(sum_coef4$coefficients[22], digits = 2),
format(sum_coef4$coefficients[23], digits = 2),
format(sum_coef4$coefficients[24], digits = 2)
)
as.data.frame(cbind(Variables, Estimates, Std.Error, t_value, p_value))
sum_coef4
diabetes_mean2[random3, ]
diabetes_zeros = diabetes
diabetes_zeros = diabetes
for (i in 1:ncol(diabetes_zeros)) {
diabetes_zeros[is.na(diabetes_zeros[, i]), i] <- 0
}
diabetes_zeros2 <- round(diabetes_zeros, 1)
reg_zeros = lm(Age ~ Glucose + BloodPressure + SkinThickness + Insulin +
BMI, data = diabetes_zeros2)
sum_coef5 <- summary(reg_zeros)[4]
sum_coef5
diabetes_zeros = diabetes
for (i in 1:ncol(diabetes_zeros)) {
diabetes_zeros[is.na(diabetes_zeros[, i]), i] <- 0
}
diabetes_zeros2 <- round(diabetes_zeros, 1)
reg_zeros = lm(Age ~ Glucose + BloodPressure + SkinThickness + Insulin +
BMI, data = diabetes_zeros2)
sum_coef5 <- summary(reg_zeros)[4]
# Build dataframe
Variables <-
c(
'(intercept)',
'Glucose',
'BloodPressure',
'SkinThickness',
'Insulin',
'BMI'
)
Estimates <- c(
format(sum_coef5$coefficients[1], digits = 2),
format(sum_coef5$coefficients[2], digits = 2),
format(sum_coef5$coefficients[3], digits = 2),
format(sum_coef5$coefficients[4], digits = 2),
format(sum_coef5$coefficients[5], digits = 2),
format(sum_coef5$coefficients[6], digits = 2)
)
Std.Error <- c(
format(sum_coef5$coefficients[7], digits = 2),
format(sum_coef5$coefficients[8], digits = 2),
format(sum_coef5$coefficients[9], digits = 2),
format(sum_coef5$coefficients[10], digits = 2),
format(sum_coef5$coefficients[11], digits = 2),
format(sum_coef5$coefficients[12], digits = 2)
)
t_value <- c(
format(sum_coef5$coefficients[13], digits = 2),
format(sum_coef5$coefficients[14], digits = 2),
format(sum_coef5$coefficients[15], digits = 2),
format(sum_coef5$coefficients[16], digits = 2),
format(sum_coef5$coefficients[17], digits = 2),
format(sum_coef5$coefficients[18], digits = 2)
)
p_value <- c(
format(sum_coef5$coefficients[19], digits = 2),
format(sum_coef5$coefficients[20], digits = 2),
format(sum_coef5$coefficients[21], digits = 2),
format(sum_coef5$coefficients[22], digits = 2),
format(sum_coef5$coefficients[23], digits = 2),
format(sum_coef5$coefficients[24], digits = 2)
)
as.data.frame(cbind(Variables, Estimates, Std.Error, t_value, p_value))
sum_coef5$coefficients
diabetes_zeros2[random3, ]
#MICE method ----
require(mice)
imp = mice(diabetes, seed = 1275)
imp = mice(diabetes, seed = 1275)
output$reg_summary <- DT::renderDT({
fit1 = with(imp, lm(Age ~ Glucose + BloodPressure + SkinThickness
+ Insulin + BMI))
pooled = pool(fit1)
sum_coef2 <- summary(pooled)
# Build dataframe
Variables <-
c(
'(intercept)',
'Sepal.Width',
'Petal.Length',
'Speciesversicolor',
'Speciesvirginica'
)
Estimates <- c(
format(sum_coef2$estimate[1], digits = 2),
format(sum_coef2$estimate[2], digits = 2),
format(sum_coef2$estimate[3], digits = 2),
format(sum_coef2$estimate[4], digits = 2),
format(sum_coef2$estimate[5], digits = 2)
)
Std.Error <- c(
format(sum_coef2$std.error[1], digits = 2),
format(sum_coef2$std.error[2], digits = 2),
format(sum_coef2$std.error[3], digits = 2),
format(sum_coef2$std.error[4], digits = 2),
format(sum_coef2$std.error[5], digits = 2)
)
t_value <- c(
format(sum_coef2$statistic[1], digits = 2),
format(sum_coef2$statistic[2], digits = 2),
format(sum_coef2$statistic[3], digits = 2),
format(sum_coef2$statistic[4], digits = 2),
format(sum_coef2$statistic[5], digits = 2)
)
p_value <- c(
format(sum_coef2$p.value[1], digits = 2),
format(sum_coef2$p.value[2], digits = 2),
format(sum_coef2$p.value[3], digits = 2),
format(sum_coef2$p.value[4], digits = 2),
format(sum_coef2$p.value[5], digits = 2)
)
as.data.frame(cbind(Variables, Estimates, Std.Error, t_value, p_value))
},
style = "bootstrap4", # You must use this style
rownames = TRUE,
options = list(
responsive = TRUE,
scrollX = TRUE,
paging = FALSE,
# Set to False for small tables
searching = FALSE,
# Set to False to turn of the search bar
ordering = FALSE,
dom = 't' # Remove 'showing 1 to 1 of 1 entries' element
))
fit1 = with(imp, lm(Age ~ Glucose + BloodPressure + SkinThickness
+ Insulin + BMI))
pooled = pool(fit1)
sum_coef2 <- summary(pooled)
sum_coef2
sum_coef2
sum_coef2$estimate[1]
sum_coef2$estimate[6]
std.error[1]
sum_coef2$std.error[1]
# Build dataframe
Variables <-
c(
'(intercept)',
'Glucose',
'BloodPressure',
'SkinThickness',
'Insulin',
'BMI'
)
Estimates <- c(
format(sum_coef2$estimate[1], digits = 2),
format(sum_coef2$estimate[2], digits = 2),
format(sum_coef2$estimate[3], digits = 2),
format(sum_coef2$estimate[4], digits = 2),
format(sum_coef2$estimate[5], digits = 2),
format(sum_coef2$estimate[6], digits = 2)
)
Std.Error <- c(
format(sum_coef2$std.error[1], digits = 2),
format(sum_coef2$std.error[2], digits = 2),
format(sum_coef2$std.error[3], digits = 2),
format(sum_coef2$std.error[4], digits = 2),
format(sum_coef2$std.error[5], digits = 2),
format(sum_coef2$std.error[6], digits = 2)
)
t_value <- c(
format(sum_coef2$statistic[1], digits = 2),
format(sum_coef2$statistic[2], digits = 2),
format(sum_coef2$statistic[3], digits = 2),
format(sum_coef2$statistic[4], digits = 2),
format(sum_coef2$statistic[5], digits = 2),
format(sum_coef2$statistic[6], digits = 2)
)
p_value <- c(
format(sum_coef2$p.value[1], digits = 2),
format(sum_coef2$p.value[2], digits = 2),
format(sum_coef2$p.value[3], digits = 2),
format(sum_coef2$p.value[4], digits = 2),
format(sum_coef2$p.value[5], digits = 2),
format(sum_coef2$p.value[6], digits = 2)
)
as.data.frame(cbind(Variables, Estimates, Std.Error, t_value, p_value))
sum_coef2
imp$imp
imp_table <- rbind(
imp$imp$Glucose,
imp$imp$BloodPressure,
imp$imp$SkinThickness,
imp$imp$Insulin,
imp$imp$BMI
)
imp_table
runApp()
diabetes
reg0 = lm(Age ~ Pregnancies + Glucose + BloodPressure + SkinThickness
+ Insulin + BMI + DiabetesPedigreeFunction, data = diabetes)
sum_coef <- summary(reg0)[4]
sum_coef
sum_coef$coefficients[1]
runApp()
runApp()
runApp()
#original dataset
diabetes[random3,]
diabetes1[random3,]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
diabetes1 = diabetes
diabetes1
imp_table <- rbind(
imp$imp$Glucose,
imp$imp$BloodPressure,
imp$imp$SkinThickness,
imp$imp$Insulin,
imp$imp$BMI
)
imp_table
head(imp_table.20)
head(imp_table,20)
runApp()
diabetes_mean = diabetes
for (i in 1:ncol(diabetes_mean)) {
diabetes_mean[is.na(diabetes_mean[, i]), i] <-
mean(diabetes_mean[, i], na.rm = TRUE)
}
diabetes_mean2 <- round(diabetes_mean, 1)
reg_mean = lm(Age ~ Glucose + BloodPressure + SkinThickness + Insulin +
BMI, data = diabetes_mean2)
diabetes_mean2
runApp()
diabetes_mean = diabetes
for (i in 1:ncol(diabetes_mean)) {
diabetes_mean[is.na(diabetes_mean[, i]), i] <-
mean(diabetes_mean[, i], na.rm = TRUE)
}
diabetes_mean2 <- round(diabetes_mean, 1)
reg_mean = lm(Age ~ Pregnancies + Glucose + BloodPressure +
SkinThickness + Insulin + BMI +
DiabetesPedigreeFunction, data = diabetes_mean2)
sum_coef4 <- summary(reg_mean)[4]
sum_coef4
diabetes_mean2[random3, ]
runApp()
runApp()
runApp()
#MICE method ----
require(mice)
imp = mice(diabetes, seed = 1275)
output$reg_summary2 <- DT::renderDT({
fit1 = with(imp, lm(Age ~ Pregnancies + Glucose + BloodPressure +
SkinThickness + Insulin + BMI +
DiabetesPedigreeFunction))
pooled = pool(fit1)
sum_coef2 <- summary(pooled)
# Build dataframe
Variables <-
c(
'(intercept)',
'Pregnancies',
'Glucose',
'BloodPressure',
'SkinThickness',
'Insulin',
'BMI',
'DiabetesPedigreeFunction'
)
Estimates <- c(
format(sum_coef2$estimate[1], digits = 2),
format(sum_coef2$estimate[2], digits = 2),
format(sum_coef2$estimate[3], digits = 2),
format(sum_coef2$estimate[4], digits = 2),
format(sum_coef2$estimate[5], digits = 2),
format(sum_coef2$estimate[6], digits = 2),
format(sum_coef2$estimate[7], digits = 2),
format(sum_coef2$estimate[8], digits = 2)
)
Std.Error <- c(
format(sum_coef2$std.error[1], digits = 2),
format(sum_coef2$std.error[2], digits = 2),
format(sum_coef2$std.error[3], digits = 2),
format(sum_coef2$std.error[4], digits = 2),
format(sum_coef2$std.error[5], digits = 2),
format(sum_coef2$std.error[6], digits = 2),
format(sum_coef2$std.error[7], digits = 2),
format(sum_coef2$std.error[8], digits = 2)
)
t_value <- c(
format(sum_coef2$statistic[1], digits = 2),
format(sum_coef2$statistic[2], digits = 2),
format(sum_coef2$statistic[3], digits = 2),
format(sum_coef2$statistic[4], digits = 2),
format(sum_coef2$statistic[5], digits = 2),
format(sum_coef2$statistic[6], digits = 2),
format(sum_coef2$statistic[7], digits = 2),
format(sum_coef2$statistic[8], digits = 2)
)
p_value <- c(
format(sum_coef2$p.value[1], digits = 2),
format(sum_coef2$p.value[2], digits = 2),
format(sum_coef2$p.value[3], digits = 2),
format(sum_coef2$p.value[4], digits = 2),
format(sum_coef2$p.value[5], digits = 2),
format(sum_coef2$p.value[6], digits = 2),
format(sum_coef2$p.value[7], digits = 2),
format(sum_coef2$p.value[8], digits = 2)
)
as.data.frame(cbind(Variables, Estimates, Std.Error, t_value, p_value))
},
style = "bootstrap4", # You must use this style
rownames = TRUE,
options = list(
responsive = TRUE,
scrollX = TRUE,
paging = FALSE,
# Set to False for small tables
searching = FALSE,
# Set to False to turn of the search bar
ordering = FALSE,
dom = 't' # Remove 'showing 1 to 1 of 1 entries' element
))
#MICE method ----
require(mice)
imp = mice(diabetes, seed = 1275)
fit1 = with(imp, lm(Age ~ Pregnancies + Glucose + BloodPressure +
SkinThickness + Insulin + BMI +
DiabetesPedigreeFunction))
pooled = pool(fit1)
sum_coef2 <- summary(pooled)
imp_table <- rbind(
imp$imp$Glucose,
imp$imp$BloodPressure,
imp$imp$SkinThickness,
imp$imp$Insulin,
imp$imp$BMI
)
imp_table
diabetes
imp = mice(diabetes, seed = 1275)
fit1 = with(imp, lm(Age ~ Pregnancies + Glucose + BloodPressure +
SkinThickness + Insulin + BMI +
DiabetesPedigreeFunction))
pooled = pool(fit1)
pooled
pool(fit1)
sum_coef2 <- summary(pooled)
sum_coef2
summary(fit1)
fit1
fit1[[1]]
fit1[[2]]
fit1[[3]]
fit1[[4]]
fit1[[4]][3]
fit1[[4]][3]
fit1[[4]][3] = data.lm3
fit1[[4]][3] -> data.lm3
data.lm3
diabetes3 = diabetes
replace_na(diabetes3[, input$Ydiabetes], replace = 0) -> diabetes3[, input$Ydiabetes]
data.lm3 = lm(diabetes3[, input$Ydiabetes]~ diabetes3$Age)
diabetes3 = diabetes
data.lm3 = lm(diabetes3diabetes$Pregnancies~ diabetes3$Age)
data.lm3 = lm(diabetes3$Pregnancies~ diabetes3$Age)
diabetes3 = diabetes
data.lm3 = lm(diabetes3$Pregnancies~ diabetes3$Age)
ggplot(diabetes3, aes(Age, diabetes3$Pregnancies)) +
geom_point() +
labs(x='Age',y='pre') +
theme_bw(base_size = 20) +
geom_abline(slope = coef(data.lm3)[[2]], intercept = coef(data.lm3)[[1]],
col = 'green')
data.lm3
coef(data.lm3)
fit1[[4]][3] -> data.lm3
coef(data.lm3
end
coef(data.lm3)
data.lm3
runApp()
iris1
#Data manipulation dataset to drop some values ----
#For Iris
iris1=iris
set.seed(999)
#choose 10 out of 150
random1=sample(1:150,10)
#decide which row to drop
random2=sample(1:5,10,replace=TRUE)
#convert them to NA
for(i in 1:10) iris1[random1[i],random2[i]]<-NA
iris1
iris1
#For Iris - Level2
iris20=iris
set.seed(999)
#choose 10 out of 150
random1=sample(1:150,20)
#decide which row to drop
random2=sample(1:5,20,replace=TRUE)
#convert them to NA
for(i in 1:20) iris20[random1[i],random2[i]]<-NA
iris20
data.lm = lm(iris20$Sepal.Length~ iris20[, input$Xiris])
iris
runApp()
runApp()
data.lm = lm(iris20$Sepal.Length~ iris20[, input$Xiris])
runApp()
sapply(diabetes, function(x) sum(is.na(x)))
data.frame(a)
sapply(diabetes, function(x) sum(is.na(x))) -> a
data.frame(a)
sapply(diabetes, function(x) sum(is.na(x))) -> a
a[1]
a
a[2]
a[3]
a[1]->j
a[2]->k
a[3]->l
rbind(j,k,l)
a
a$Pregnancies
a[1]
a[1][1]
a[1][0]
a[1][2]
a[1][3]
a[1][1]
a[0]
a[1]
a[2]
a
data.frame(a)
df1<-data.frame(sapply(diabetes, function(x) sum(is.na(x))))
df1
df1[1]
df1[1][1]
df1$Age
df1$sapply.diabetes..function.x..sum.is.na.x...
df1$sapply.diabetes..function.x..sum.is.na.x...[1]
df1$sapply.diabetes..function.x..sum.is.na.x...[2]
df1
df1<-data.frame(sapply(diabetes, function(x) sum(is.na(x))))
# Build dataframe
Variables <-
c('Pregnancies','Glucose','BloodPressure','SkinThickness',
'Insulin','BMI','DiabetesPedigreeFunction','Age')
Number_of_NAs <- c(
df1$sapply.diabetes..function.x..sum.is.na.x...[1],
df1$sapply.diabetes..function.x..sum.is.na.x...[2],
df1$sapply.diabetes..function.x..sum.is.na.x...[3],
df1$sapply.diabetes..function.x..sum.is.na.x...[4],
df1$sapply.diabetes..function.x..sum.is.na.x...[5],
df1$sapply.diabetes..function.x..sum.is.na.x...[6],
df1$sapply.diabetes..function.x..sum.is.na.x...[7],
df1$sapply.diabetes..function.x..sum.is.na.x...[8],
)
Number_of_NAs <- c(
df1$sapply.diabetes..function.x..sum.is.na.x...[1],
df1$sapply.diabetes..function.x..sum.is.na.x...[2],
df1$sapply.diabetes..function.x..sum.is.na.x...[3],
df1$sapply.diabetes..function.x..sum.is.na.x...[4],
df1$sapply.diabetes..function.x..sum.is.na.x...[5],
df1$sapply.diabetes..function.x..sum.is.na.x...[6],
df1$sapply.diabetes..function.x..sum.is.na.x...[7],
df1$sapply.diabetes..function.x..sum.is.na.x...[8]
)
as.data.frame(cbind(Variables, Number_of_NAs))
as.data.frame(rbind(Variables, Number_of_NAs))
as.data.frame(rbind(Variables, Number_of_NAs))->joi
joi
joi[0]
joi[1]
df2<-sapply(iris20, function(x) sum(is.na(x)))
df2
df2
df2<-data.frame(sapply(iris20, function(x) sum(is.na(x))))
df2<-data.frame(sapply(iris20, function(x) sum(is.na(x))))
# Build dataframe
Variables <-
c('Sepal.Length','Sepal.Width','Petal.Length','Petal.Width', 'Species')
Number_of_NAs <- c(
df2$sapply.iris20..function.x..sum.is.na.x...[1],
df2$sapply.iris20..function.x..sum.is.na.x...[2],
df2$sapply.iris20..function.x..sum.is.na.x...[3],
df2$sapply.iris20..function.x..sum.is.na.x...[4]
)
as.data.frame(rbind(Variables, Number_of_NAs))
runApp()
runApp()
runApp()
runApp()
runApp()
data.lm0 = lm(iris$Sepal.Length~ iris[, input$Xiris])
runApp()
runApp()
